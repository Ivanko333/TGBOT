from telebot import *
import time
import random
import os
import options
import gpt
import secret


bot = TeleBot(secret.api)

debug = secret.debug
chanel = secret.chanel
chat_bot = secret.chat_bot
my_chat = secret.my_chat


@bot.message_handler(commands=['start'])
def send_welcome(message):
    bot.reply_to(message, f"–ü—Ä–∏–≤–µ—Ç, {message.from_user.first_name}")


@bot.message_handler(commands=['server'])
def send_ping(message):
    a = options.ping(secret.server)
    bot.reply_to(message, a)


@bot.message_handler(commands=['dior'])
def send_dior(message):
    num = random.randint(1, 4)

    if num == 1:
        video = open('/root/TGBOT/FILES/dior.mp4', 'rb')
        bot.send_video(message.chat.id, video)

    elif num == 2:
        photo = open('/root/TGBOT/FILES/dior1.jpg', 'rb')
        bot.send_photo(message.chat.id, photo)

    elif num == 3:
        photo = open('/root/TGBOT/FILES/dior2.jpg', 'rb')
        bot.send_photo(message.chat.id, photo)

    elif num == 4:
        photo = open('/root/TGBOT/FILES/dior3.jpg', 'rb')
        bot.send_photo(message.chat.id, photo)


@bot.message_handler(commands=['donate'])
def donate(message):
    bot.send_message(message.chat.id, f"–ü–æ–¥–¥–µ—Ä–∂–∞—Ç—å –∞–≤—Ç–æ—Ä–∞:\nclck.ru/3GQWxZ", disable_web_page_preview=True)


@bot.message_handler(commands=['off'])
def off(message):
    bot.send_message(message.chat.id, "–†–∞–∑–º–µ—á—Ç–∞–ª—Å—è...")


@bot.message_handler(content_types=['photo', 'audio', 'voice', 'sticker'])
def send_img(message):
    types = message.content_type
    if message.message_thread_id == 2978:
        if types == "photo":
            img = message.photo[-1].file_id
            bot.send_photo(my_chat, img)
        elif types == "audio":
            song = message.audio.file_id
            bot.send_voice(my_chat, song)
        elif types == "voice":
            voice = message.voice.file_id
            bot.send_voice(my_chat, voice)
        elif types == "sticker":
            stick = message.sticker.file_id
            bot.send_sticker(my_chat, stick)


@bot.message_handler(content_types=['text'])
def response(message):

    if message.message_thread_id == 2978:
        bot.send_message(my_chat, message.text)

    echo = message.text.split(" ")
    answer = "" # –¥–ª—è CHATGPT –≤ –≥—Ä—É–ø–ø–µ
    tell = "" # –¥–ª—è "–°–∫–∞–∑–∞—Ç—å"
    sms = message.text.lower()
    boykisser = ['CAACAgIAAxkBAAENDl9nwx4_qphvCmndUCTkLgU4E462-AAC1j4AAtgvQUjO_bwr9IEtuTYE',
                 'CAACAgIAAxkBAAENDl1nwx39lPUzMKlGbgn05zTNFVMoawACB0oAAp5HYUtqPvNadgABVEA2BA',
                 'CAACAgIAAxkBAAENDmNnwx5vJJMlhXCZcAmkFJJ6XyBhqQACjEgAAkGMwEkOsFNNRoKOpTYE',
                 'CAACAgIAAxkBAAENDVlnwvWfdCUC0VNo1H0_ymeVtbWuxAACqTwAAh2WQUhFlySC_EiZYjYE',
                 'CAACAgIAAxkBAAENDmdnwx6ZTeVWpkf4gTCSrBnyEIdnuQACDz4AAi4BQEij3fesKj0GTjYE',
                 'CAACAgIAAxkBAAENDmlnwx6oq1RMZQtapfwhvz7iZTNQgAACFjUAAvk8QEiwBO0Inu7kozYE',
                 'CAACAgIAAxkBAAENDmtnwx60x5yr88U8Xkfq-40tGQg-RQACMUIAAsg5QUhxWEPrjEppATYE',
                 'CAACAgIAAxkBAAENDm1nwx7KV1KaTxQrEDrN_fRggP-RrQAC6TgAAgWVSEib-pPLVofo_DYE',
                 'CAACAgIAAxkBAAENDm9nwx7TAiI_CXUckvrzlJR4Hs9z7QACa0YAAi-CSEh2hKG3hS-hUzYE',
                 'CAACAgIAAxkBAAENDnFnwx7cNAlMSD9l2ZLXpaCOy5eCVQACkEAAAkZ-SUiu6Nl2Wm2GtTYE',
                 'CAACAgIAAxkBAAENDnNnwx7klfvXu7hJmGScEY0olLoOxQACkT8AAr6DSEicItGojW6eyDYE',
                 'CAACAgIAAxkBAAENDndnwx8I519Aqk1Se9HuuCMgcg7M5wAC_z0AAghgSEgNY3CP8anMdTYE',
                 'CAACAgIAAxkBAAENDodnwx-VUDj0EYm8o4rkxxnqgUix5gAC3j0AAq1HSEjZCRNzvmhHszYE',
                 'CAACAgIAAxkBAAENDolnwx-co8I1HEB_82_PT9fU8YWe0wAC_kQAAtcHSUhb7THSyCYNZDYE',
                 'CAACAgIAAxkBAAENDotnwx-mlC4J_y-yRiKLR2MfzLGDvQACLzoAAowBWEgsPrqaPlXYCTYE',
                 'CAACAgIAAxkBAAENDo1nwx-vHKLpqgABYHhW0ScK5XTBEmgAAldBAAIW1IBIvLRxNT-wOT82BA',
                 'CAACAgIAAxkBAAENDo9nwx-yHEFjHq73K9apqQ8vsxE8IwACXkQAAuE8gEgjTcW_gGgsojYE',
                 'CAACAgIAAxkBAAENDpNnwx_UodTy4bmJgonoHResLMlDygACS0gAAmij8UmFZdIozZOh6TYE',
                 'CAACAgIAAxkBAAENDpVnwx_aQ-H10SFSkvIc35TyrsPPJwACcz4AAi2GmEj3yTgk7ryaSDYE',
                 'CAACAgIAAxkBAAENDpdnwx_dBhynpPp5btWjZFe6JuNqFgACPk4AApHx2UrtlB29Ld_LQTYE',
                 'CAACAgIAAxkBAAENDplnwx_g-FA0mpNwtfmKgF_6gUMxcQACGFkAArEqCUlpPUmh_s7nuzYE',
                 'CAACAgIAAxkBAAENDptnwx_lSmeoUGsJ6XCbSxM1mf8vwAACQ1kAAsNWeUuRuvx5us5O2DYE'
                 'CAACAgIAAxkBAAENDp1nwx_nkjcJ3-TjcbH2mWMKPMjL4gACH2oAAmnjsUiT0auFtZtTsjYE',
                 'CAACAgIAAxkBAAENDVtnwvWvdSyaDHPRqbjs_Z2AfWZKXAACOT0AAqwkYUoKvpsIayF4gDYE']

    try:
        # –µ—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ—Å—Ç—É–ø–∞—é—Ç –Ω–µ –≤ –¥–∏–∞–ª–æ–≥–µ —Å –±–æ—Ç–æ–º
        if message.chat.type != 'private':

            if sms == "–±–æ—Ç":
                bot.reply_to(message, "–†–∞–±–æ—Ç–∞–µ—Ç!")

            if sms == "lol" or sms == "–ª–æ–ª":
                bot.send_message(message.chat.id, '–ê–≥–∞')

            if sms == "iann dior" or sms == "iann door" or sms == "iann" or sms == "—è–Ω –¥–∏–æ—Ä" or sms == "–¥–∏–æ—Ä":
                bot.reply_to(message, "–≠—Ç–æ—Ç —Ç–æ—Ç –∫–æ—Ç–æ—Ä—ã–π nigga? 0_0")

            if sms == "—Ç–æ–ø":
                bot.reply_to(message, "–¢—ã —Ç–æ–ø!")

            if sms == "–∏—Ä–∏—Å":
                bot.reply_to(message, "–ñ–º–æ—Ç!")

            if sms == "–∫–∏—Å –∫–∏—Å" or sms == "–∫–∏—Å-–∫–∏—Å":
                bot.reply_to(message, "–ú—è—É!")

            if sms == "–∫–∏—Å –∫–∏—Å –∫–∏—Å":
                bot.reply_to(message, "–ñ–ï–ù–©–ò–ù–ê –°–Æ–†–ü–†–ò–ó")

            if sms == "–±—Ä–æ–µ–Ω":
                bot.reply_to(message, "–Ø —É–∫—Ä–∞–ª–∞ –ë—Ä–∞–π–Ω–∞")

            if sms == "—Ä–∞–±–æ—Ç–∞–µ—Ç":
                bot.reply_to(message, "–ö–æ–Ω–µ—á–Ω–æ —Ä–∞–±–æ—Ç–∞—é))")

            if sms == "–ø—Ä–∏–≤–µ—Ç":
                bot.send_message(message.chat.id, "–ö—É –∫—É")

            if sms == "—Ö—ã" or sms == "—Ö—ã—Ö":
                bot.send_message(message.chat.id, 'üòÅ')

            if sms == "telebot":
                bot.reply_to(message, "–î–∞, —ç—Ç–æ –∏–º–µ–Ω–Ω–∞ —Ç–∞ –±–∏–±–ª–∏–æ—Ç–µ–∫–∞, –Ω–∞ –∫–æ—Ç–æ—Ä–æ–π —è —Å–¥–µ–ª–∞–Ω)")

            if sms == ".api":
                bot.reply_to(message, message)

            if sms == "–±—É":
                bot.send_message(message.chat.id, "–ë—É! –ò—Å–ø—É–≥–∞–ª—Å—è? –ù–µ –±–æ–π—Å—è, —è –¥—Ä—É–≥, —è —Ç–µ–±—è –Ω–µ –æ–±–∏–∂—É. –ò–¥–∏ —Å—é–¥–∞, –∏–¥–∏ –∫–æ –º–Ω–µ, "
                                                  "—Å—è–¥—å —Ä—è–¥–æ–º —Å–æ –º–Ω–æ–π, –ø–æ—Å–º–æ—Ç—Ä–∏ –º–Ω–µ –≤ –≥–ª–∞–∑–∞."
                                                  "–¢—ã –≤–∏–¥–∏—à—å –º–µ–Ω—è? –Ø —Ç–æ–∂–µ —Ç–µ–±—è –≤–∏–∂—É. –î–∞–≤–∞–π —Å–º–æ—Ç—Ä–µ—Ç—å –¥—Ä—É–≥ –Ω–∞ –¥—Ä—É–≥–∞ –¥–æ —Ç–µ—Ö –ø–æ—Ä, "
                                                  "–ø–æ–∫–∞ –Ω–∞—à–∏ –≥–ª–∞–∑–∞ –Ω–µ —É—Å—Ç–∞–Ω—É—Ç. –¢—ã –Ω–µ —Ö–æ—á–µ—à—å?"
                                                  "–ü–æ—á–µ–º—É? –ß—Ç–æ-—Ç–æ –Ω–µ —Ç–∞–∫?")

            if sms == "—Ä–æ–ª–ª":
                bot.send_dice(message.chat.id, "üé≤")
                time.sleep(2)

            if sms == "–∫–∞–∑–∏–Ω–æ":
                bot.send_dice(message.chat.id, "üé∞")
                time.sleep(2)

            if sms == "–±–∞—Å–∫–µ—Ç":
                bot.send_dice(message.chat.id, "üèÄ")
                time.sleep(2)

            if sms == "–±–æ–π–∫–∏—Å—Å–µ—Ä":
                stick = random.choice(boykisser)
                bot.send_sticker(message.chat.id, stick)
                time.sleep(2)

            if echo[0].lower() == "—Å–∫–∞–∂–∏":
                for i in range(1, len(echo)):
                    tell += echo[i] + " "
                if echo[1:]:
                    bot.send_message(message.chat.id,
                                     f"{tell} \n–û—Ç: {message.from_user.first_name} (@{message.from_user.username})")


            # CHATGPT –≤ –≥—Ä—É–ø–ø–µ
            elif echo[0].lower() == "—Å–ø—Ä–æ—Å–∏—Ç—å":
                for i in range(1, len(echo)):
                    answer += echo[i] + " "

                try:
                    if answer:
                        msg1 = bot.send_message(message.chat.id, "–ë–æ—Ç –¥—É–º–∞–µ—Ç. –û–∂–∏–¥–∞–π—Ç–µ –æ—Ç–≤–µ—Ç –≤ —Ç–µ—á–µ–Ω–∏–∏–∏ 5-10 —Å–µ–∫—É–Ω–¥")
                        bot.send_message(message.chat.id, gpt.ask(answer))
                        bot.delete_message(message.chat.id, msg1.message_id)
                    else:
                        bot.send_message(message.chat.id, "–í—ã –≤–≤–µ–ª–∏ –ø—É—Å—Ç–æ–π –∑–∞–ø—Ä–æ—Å. –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –∫–æ–º–º–∞–Ω–¥—ã: –°–ø—Ä–æ—Å–∏—Ç—å <—Å–æ–æ–±—â–µ–Ω–∏–µ>")

                except TypeError as e:
                    bot.reply_to(message, "–û—à–∏–±–∫–∞! –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑")
                    options.send_debug(bot, debug, 2977, e)
            # END

            for i in echo:
                if i.lower() == "–≤–æ–ª–∏—Å":
                    bot.reply_to(message, "–í–æ–ª–∏—Å –µ–±—ë—Ç—Å—è —Å –Ω–µ–≥—Ä–∞–º–∏...")
                break


        # CHATGPT –≤ –¥–∏–∞–ª–æ–≥–µ —Å –±–æ—Ç–æ–º
        else:
            try:
                time.sleep(3)
                options.send_debug(bot, debug, 2977, message.from_user.username)
                bot.send_message(message.chat.id, gpt.ask(message.text))

            except Exception as e:
                bot.send_message(message.chat.id, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑")
                options.send_debug(bot, debug, 2977, e)
        # END

    except Exception as e:
        options.send_debug(bot, debug, 2977, e)


if __name__ == "__main__":
    options.send_debug(bot, debug, 2977, "–ë–æ—Ç –≤–∫–ª—é—á—ë–Ω")
    bot.infinity_polling()
    options.send_debug(bot, debug, 2977, "–ë–æ—Ç –≤—ã–∫–ª—é—á–µ–Ω")

