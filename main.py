from telebot import *
import time
import random
import options
import gpt
import secret
import stickers


bot = TeleBot(secret.api)

debug = secret.debug
chat_bot = secret.chat_bot
my_chat = secret.my_chat
I = secret.I
svet = secret.svet
status = True


@bot.message_handler(commands=['start'])
def send_welcome(message):
    if message.text == "/start@IvanSkyBot" and message.chat.type != 'private':
        bot.reply_to(message, f"–ü—Ä–∏–≤–µ—Ç, {message.from_user.first_name}")
    else:
        bot.reply_to(message, f"–ü—Ä–∏–≤–µ—Ç, {message.from_user.first_name}")


@bot.message_handler(commands=['qrgen', 'genqr'])
def qr(message):
    try:
        text = message.text.split(' ')
        gpt.generate_qr(message, text[1])
    except IndexError:
        bot.reply_to(message, "–û—à–∏–±–∫–∞. –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã: /link —Ç–µ–∫—Å—Ç –∏–ª–∏ —Å—Å—ã–ª–∫–∞ –∫–æ—Ç–æ—Ä—É—é –Ω–∞–¥–æ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å")


@bot.message_handler(commands=['link'])
def link_shot(message):
    url = message.text.split(' ')
    try:
        gpt.link(message, url[1])
    except IndexError:
        bot.reply_to(message, "–û—à–∏–±–∫–∞. –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã: /link —Å—Å—ã–ª–∫–∞")


@bot.message_handler(commands=['setstatus'])
def work(message):
    global status
    text = message.text.split(' ')

    if message.from_user.id == I:
        if text[1] == "True":
            status = True

        elif text[1] == "False":
            status = False


@bot.message_handler(commands=['dior'])
def send_dior(message):
    options.random_dior(message.chat.id)


@bot.message_handler(commands=['donate'])
def donate(message):
    bot.send_message(message.chat.id, f"–ü–æ–¥–¥–µ—Ä–∂–∞—Ç—å –∞–≤—Ç–æ—Ä–∞:\nclck.ru/3GQWxZ", disable_web_page_preview=True)


@bot.message_handler(commands=['git', 'github'])
def git(message):
    bot.send_message(message.chat.id, "–í–æ—Ç —Å—ã–ª–ª–∫–∞ –Ω–∞ –º–æ–π –∫–æ–¥: clck.ru/3HCoes", disable_web_page_preview=True)


@bot.message_handler(content_types=['text'])
def response(message):

    echo = message.text.split(" ")
    answer = "" # –¥–ª—è CHATGPT –≤ –≥—Ä—É–ø–ø–µ
    sms = message.text.lower()

    try:
        # –µ—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ—Å—Ç—É–ø–∞—é—Ç –Ω–µ –≤ –¥–∏–∞–ª–æ–≥–µ —Å –±–æ—Ç–æ–º
        if message.chat.type != 'private':

            if sms == "–±–æ—Ç":
                bot.reply_to(message, "–†–∞–±–æ—Ç–∞–µ—Ç!")

            if sms == "lol" or sms == "–ª–æ–ª":
                bot.send_message(message, '–•–≤—Ö–∞—Ö–≤–∞—Ö–∞–≤')

            if sms == "iann dior" or sms == "iann door" or sms == "iann" or sms == "—è–Ω –¥–∏–æ—Ä" or sms == "–¥–∏–æ—Ä" or sms == "dior":
                bot.reply_to(message, "–≠—Ç–æ—Ç —Ç–æ—Ç –∫–æ—Ç–æ—Ä—ã–π nigga? 0_0")

            if sms == "—Ç–æ–ø":
                bot.reply_to(message, "–¢—ã —Ç–æ–ø!")

            if sms == "–∏—Ä–∏—Å":
                bot.reply_to(message, "–ñ–º–æ—Ç!")

            if sms == "–∫–∏—Å –∫–∏—Å" or sms == "–∫–∏—Å-–∫–∏—Å":
                bot.reply_to(message, "–ú—è—É!")

            if sms == "–∫–∏—Å –∫–∏—Å –∫–∏—Å":
                bot.reply_to(message, "–ñ–ï–ù–©–ò–ù–ê –°–Æ–†–ü–†–ò–ó")

            if sms == "–±—Ä–æ–µ–Ω":
                bot.reply_to(message, "–Ø —É–∫—Ä–∞–ª–∞ –ë—Ä–∞–π–Ω–∞")

            if sms == "—Ä–∞–±–æ—Ç–∞–µ—Ç":
                bot.reply_to(message, "–ö–æ–Ω–µ—á–Ω–æ —Ä–∞–±–æ—Ç–∞—é))")

            if sms == "–ø—Ä–∏–≤–µ—Ç":
                bot.send_message(message.chat.id, "–ü—Ä–∏–≤–µ—Ç–∏–∫–∏)")

            if sms == "—Ö—ã" or sms == "—Ö—ã—Ö" or sms == "—Ö–µ—Ö" or sms == "—Ö–µ—Ö–µ" or sms == "—Ö–µ":
                bot.send_message(message.chat.id, 'üòÅ')

            if sms == "telebot":
                bot.reply_to(message, "–î–∞, —ç—Ç–æ –∏–º–µ–Ω–Ω–∞ —Ç–∞ –±–∏–±–ª–∏–æ—Ç–µ–∫–∞, –Ω–∞ –∫–æ—Ç–æ—Ä–æ–π —è —Å–¥–µ–ª–∞–Ω)")

            if sms == ".api" and message.from_user.id == secret.I:
                bot.reply_to(message, message)

            if sms == "–±—É":
                bot.send_message(message.chat.id, "–ë—É! –ò—Å–ø—É–≥–∞–ª—Å—è? –ù–µ –±–æ–π—Å—è, —è –¥—Ä—É–≥, —è —Ç–µ–±—è –Ω–µ –æ–±–∏–∂—É. –ò–¥–∏ —Å—é–¥–∞, –∏–¥–∏ –∫–æ –º–Ω–µ, "
                                                  "—Å—è–¥—å —Ä—è–¥–æ–º —Å–æ –º–Ω–æ–π, –ø–æ—Å–º–æ—Ç—Ä–∏ –º–Ω–µ –≤ –≥–ª–∞–∑–∞."
                                                  "–¢—ã –≤–∏–¥–∏—à—å –º–µ–Ω—è? –Ø —Ç–æ–∂–µ —Ç–µ–±—è –≤–∏–∂—É. –î–∞–≤–∞–π —Å–º–æ—Ç—Ä–µ—Ç—å –¥—Ä—É–≥ –Ω–∞ –¥—Ä—É–≥–∞ –¥–æ —Ç–µ—Ö –ø–æ—Ä, "
                                                  "–ø–æ–∫–∞ –Ω–∞—à–∏ –≥–ª–∞–∑–∞ –Ω–µ —É—Å—Ç–∞–Ω—É—Ç. –¢—ã –Ω–µ —Ö–æ—á–µ—à—å?"
                                                  "–ü–æ—á–µ–º—É? –ß—Ç–æ-—Ç–æ –Ω–µ —Ç–∞–∫?")

            if sms == "—Ä–æ–ª–ª":
                bot.send_dice(message.chat.id, "üé≤")

            if sms == "–∫–∞–∑–∏–Ω–æ" or sms == "—Ä—É–ª–µ—Ç–∫–∞":
                bot.send_dice(message.chat.id, "üé∞")

            if sms == "–±–∞—Å–∫–µ—Ç":
                bot.send_dice(message.chat.id, "üèÄ")

            if sms == "–±–æ–π–∫–∏—Å—Å–µ—Ä":
                stick = random.choice(stickers.boykisser)
                bot.send_sticker(message.chat.id, stick)


            if message.text.lower().startswith("–±–æ—Ç —Å–∫–∞–∂–∏"):
                for i in range(2, len(echo)):
                    answer += echo[i] + " "

                if echo[1:]:
                    bot.send_message(message.chat.id, f"{answer} \n–°–∫–∞–∑–∞–ª: {message.from_user.first_name}")


            if message.text.lower().startswith("—à–∞—Ä"):
                words = ["–î–∞", "–ß–∞—Å—Ç–∏—á–Ω–æ", "–•–∑", "–ù–µ—Ç", "–ù–µ —Å–æ–≤—Å–µ–º", "100%"]
                if len(echo) > 1:
                    response = random.choices(words, weights=[18, 19, 20, 17, 21, 14], k=1)[0]
                    bot.reply_to(message, f"üîÆ {message.from_user.first_name}, –Ø –¥—É–º–∞—é: *{response}*", parse_mode='MarkdownV2')
                else:
                    bot.send_message(message.chat.id, "–í—ã –Ω–µ –≤–≤–µ–ª–∏ —Ç–µ–∫—Å—Ç. –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: –®–∞—Ä <–¢–µ–∫—Å—Ç>")


            # CHATGPT –≤ –≥—Ä—É–ø–ø–µ
            if message.text.lower().startswith("@ivanskybot"):
                if status:
                    for i in range(1, len(echo)):
                        answer += echo[i] + " "

                    try:
                        if answer:
                            msg1 = bot.send_message(message.chat.id, "–ë–æ—Ç –¥—É–º–∞–µ—Ç. –û–∂–∏–¥–∞–π—Ç–µ –æ—Ç–≤–µ—Ç –≤ —Ç–µ—á–µ–Ω–∏–∏–∏ 5-10 —Å–µ–∫—É–Ω–¥")
                            gpt.start_gpt(message, answer)
                            time.sleep(3)
                            bot.delete_message(message.chat.id, msg1.message_id)

                        else:
                            bot.send_message(message.chat.id, "–í—ã –≤–≤–µ–ª–∏ –ø—É—Å—Ç–æ–π –∑–∞–ø—Ä–æ—Å. –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –∫–æ–º–º–∞–Ω–¥—ã: –°–ø—Ä–æ—Å–∏—Ç—å <—Å–æ–æ–±—â–µ–Ω–∏–µ>")

                    except Exception as e:
                        bot.reply_to(message, "–û—à–∏–±–∫–∞! –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑")
                        options.send_debug(debug, 2977, e)
                else:
                    bot.send_message(message.chat.id, "–ë–æ—Ç –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –Ω–∞ —Ç–µ—Ö –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–∏")
            # END


        # CHATGPT –≤ –¥–∏–∞–ª–æ–≥–µ —Å –±–æ—Ç–æ–º
        else:
            if status:
                try:
                    options.send_debug(debug, 2977, f"@{message.from_user.username}({message.from_user.id})")
                    gpt.start_gpt(message, message.text)

                except Exception as e:
                    bot.send_message(message.chat.id, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑")
                    options.send_debug(debug, 2977, e)
            else:
                bot.send_message(message.chat.id, "–ë–æ—Ç –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –Ω–∞ —Ç–µ—Ö –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–∏")
        # END

    except Exception as e:
        options.send_debug(debug, 2977, e)



if __name__ == "__main__":
    options.start_time(svet)
    gpt.potok()
    options.send_debug(debug, 2977, "–ë–æ—Ç –≤–∫–ª—é—á—ë–Ω")
    bot.infinity_polling()
    options.send_debug(debug, 2977, "–ë–æ—Ç –≤—ã–∫–ª—é—á–µ–Ω")

